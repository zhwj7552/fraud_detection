{
    "contents" : "require(XML)\nrequire(tm)\n\n#\napiKey <- \"95fc57a785243d85907d142f30c46c50c555be95\"  #Census Key\n\napiKey <- \"6138FDBA-99DB-4D2A-BE7C-39A5D9B9FD06\"  #BEA Key\n\n\n\nu = \"http://api.census.gov/data.html\"\nCensusTab = readHTMLTable(u)[[1]]\n\nsearchCrit<- CensusTab[grepl(\"Business\", CensusTab$Description), c(\"Vintage\", \"Dataset Name\")]\n\ngeo.make(us=1)\nacs.fetch(endyear = 2011, span = 5, geography = geo.make(us=1), table.name=\"Sex\", Keyword = \"Business\", key = \"95fc57a785243d85907d142f30c46c50c555be95\", col.names = \"pretty\")\n\n\ncensusData[censusData$Vintage %in% searchCrit$Vintage]\n\n\nsearch.results <- Quandl.search(\"census\")\n\nWDIsearch()\n\nfunction (string = \"gdp\", field = \"name\", short = TRUE, cache = NULL) \n{\n  if (!is.null(cache)) {\n    series = cache$series\n  }\n  else {\n    series = WDI_data$series\n  }\n  matches = grep(string, series[, field], ignore.case = TRUE)\n  if (short) {\n    out = series[matches, c(\"indicator\", \"name\")]\n  }\n  else {\n    out = series[matches, ]\n  }\n  return(out)\n}\n\nWDIcache()\n\nfunction () \n{\n  series_url = \"http://api.worldbank.org/indicators?per_page=25000&format=json\"\n  series_dat = fromJSON(series_url, nullValue = NA)[[2]]\n  series_dat = lapply(series_dat, function(k) cbind(indicator = k$id, \n                                                    name = k$name, description = k$sourceNote, sourceDatabase = k$source[2], \n                                                    sourceOrganization = k$sourceOrganization))\n  series_dat = do.call(\"rbind\", series_dat)\n  country_url = \"http://api.worldbank.org/countries/all?per_page=25000&format=json\"\n  country_dat = fromJSON(country_url, nullValue = NA)[[2]]\n  country_dat = lapply(country_dat, function(k) cbind(iso3c = k$id, \n                                                      iso2c = k$iso2Code, country = k$name, region = k$region[2], \n                                                      capital = k$capitalCity, longitude = k$longitude, latitude = k$latitude, \n                                                      income = k$incomeLevel[2], lending = k$lendingType[2]))\n  country_dat = do.call(\"rbind\", country_dat)\n  row.names(country_dat) = row.names(series_dat) = NULL\n  return(list(series = series_dat, country = country_dat))\n}\n\nDat <- WDIcache()\n\nWDI()\n\nfunction (country = \"all\", indicator = \"NY.GNS.ICTR.GN.ZS\", \n          start = 2005, end = 2011, extra = FALSE, cache = NULL) \n{\n  indicator = gsub(\"[^a-zA-Z0-9\\\\.]\", \"\", indicator)\n  country = gsub(\"[^a-zA-Z0-9]\", \"\", country)\n  if (!(\"all\" %in% country)) {\n    country_bad = country[!(country %in% WDI_data$country[, \n                                                          \"iso2c\"])]\n    country = country[!(country %in% country_bad)]\n    if (length(country_bad) > 0) {\n      warning(paste(\"Unable to download data on countries: \", \n                    paste(country_bad, collapse = \", \")))\n    }\n    if (length(country) > 0) {\n      country = paste(country, collapse = \";\")\n    }\n    else {\n      stop(\"No valid country was requested\")\n    }\n  }\n  else {\n    country = \"all\"\n  }\n  if (!(start <= end)) {\n    stop(\"start/end must be integers with start <= end\")\n  }\n  dat = lapply(indicator, function(j) try(wdi.dl(j, country, \n                                                 start, end), silent = TRUE))\n  good = unlist(lapply(dat, function(i) class(i)) == \"data.frame\")\n  if (any(!good)) {\n    warning(paste(\"Unable to download indicators \", paste(indicator[!good], \n                                                          collapse = \" ; \")))\n  }\n  dat = dat[good]\n  dat = Reduce(function(x, y) merge(x, y, all = TRUE), dat)\n  if (!is.null(cache)) {\n    country_data = cache$country\n  }\n  else {\n    country_data = WDI_data$country\n  }\n  if (extra == TRUE) {\n    dat = merge(dat, country_data, all.x = TRUE)\n  }\n  countries = country[country != \"all\" & !(country %in% dat$iso2c)]\n  if (length(countries) > 0) {\n  }\n  return(dat)\n}\n\nWDI_data()\n\n#Couldn't find it, is it some type of other structure containing a certain type of list?\n\n\n",
    "created" : 1443811516159.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2690499928",
    "id" : "EEF343C",
    "lastKnownWriteTime" : 1444175542,
    "path" : "~/USgov/read_census.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}